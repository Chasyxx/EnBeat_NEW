t||(
F=1408/1200,m=q=>r=>r==q,c=(l,I)=>(r=l[0].match(/^([A-G][#b]?)([Mm+o]|mM|maj|min|augM?|dim)?([5679]|1[13])?((?:(?:add|#|b)(?:[569]|1[13])|sus[24])*)(?:\/([A-G6][#b]?))?$/),R=q=>'A BC D EF G'.indexOf(q[0])+'b #'.indexOf(q[1]??' ')-1,i='min aug dim maj m + o M mM augM'.split(' ').findIndex(m(r[2]))&3,s=[[0,,3,,7],[0,,4,,8],[0,,3,,6],[0,,4,,7]][i],u=s[1],s.push(...Array(8)),((S=r[4].match(/sus([24])/))&&(S=S[1],s[S==2?1:3]=S|S>>2)||r[3]==5)&&delete s[2],P=[9,14,,17,,21],r[3]>6&&(s[6]=(i!=2)+9+/M|maj/.test(r[2])),s.splice(8,n=max(0,r[3]-8),...P.slice(1,n+1)),/6/.test(r[3]+r[4]+r[5])&&(s[5]=9),Array.from(r[4].matchAll(/(add|#|b)([569]|1[13])/g)).forEach(q=>((s[q[2]-1]??0)||(s[q[2]-1]=P[q[2]-8]),s[q[2]-1]+=(q[1]=='#')-(q[1]=='b'))),s=s.filter(q=>q+1).map((q,i)=>(i<(I??0)?q+12:q)+R(r[1])),s.unshift(((r[5]??6)!=6?R(r[5]):R(r[1]))-12),s.o=q=>s.map((N,i)=>i>0?N+q*12:N),s),
chords=[
	[,],
	c`C#m`,						// I			(tonic)
	c`A7`,						// bII7 / V (tritone sub. of V / V)
	c`D#7/G${2}`.o(-1),		// V / V		(dominant of dominant)
	c`G#7`.o(-1),				// V7			(dominant)
	c`C#m`,c`A7`,c`D#7/G${2}`.o(-1),c`G#7`.o(-1),
	c`F#m7`.o(-1),c`G#m`.o(-1),c`A`,c`B`,
	c`F#m7`.o(-1),c`G#m`.o(-1),c`A`,c`B`,
	c`C#m`,c`A7`,c`D#7/G${2}`.o(-1),c`G#7`.o(-1),
	c`C#m`,c`A7`,c`D#7/G${2}`.o(-1),c`G#7`.o(-1),
	c`F#m7`.o(-1),c`G#m`.o(-1),c`A`,c`B`,
	c`F#m7`.o(-1),c`G#m`.o(-1),c`A`,c`B`,
	[,]
],
durations=[
	2,8,3,3,2,8,3,3,2,6,2,3,5,6,2,3,5,8,3,3,2,8,3,3,2,6,2,3,5,6,2,3,5,2
],
T=durations[0],I=0,h=0
), // End of t=0
t>h+8191&&(h=t,--T==0&&(T=durations[++I%durations.length])),
C=q=>q.reduce((v,a,i)=>v+((t*F*2**(a/12-(i==0&&~t>>13&1)))%256&(i>0?128:255))*(i>0?t%16384/16384:1),0)/q.length,
CHORDS=C(chords[I%durations.length])*.8+32*sin(20*cbrt(t%16384/40))+32*random()*(-t&8E3)/8E3+(t*[0,sin(t/1.3>>1)][1&~t>>14]&-t>>7&127)/3+32,

SAMP_RATE = 48000,
ts = t/SAMP_RATE,
v=1+100*sin(2*PI*ts*6)/t,

nn=x=>(((30*sin(t/2048)+ts*x*512)%256)<32?64:0),

mel1=nn(261.3*2**([4,4,4,,11,11,11,11,9,9,8,8,8,8,8,8,4,4,,,8,8,9,9,8,8,7*v,7*v,7*v,7*v,7*v,7*v,8,8,,,11,11,13,13,11,11,8,8,8,8,6,6,4,,8,,7,,6,,4,,7,,6,6,6,,4,4,4,,11,11,9,,8,,13,13,9,,8,,15,15,9,,11,,16,16,15,,11,,6,,4,,6,,11,,8,8,-1,,1,,4,,1,,6,,8,8,11,,6,6,6,6,4,,6,6,6,18,16,15,11,6,4,3,-1,-1,-1,-1,-3,-3,-1,-1,-1,-1,-3,-3,-4,,-8,,-5,,1,1,-1,,-5,-5,-6,,-8,,-6,,-5,,-4,,-1,-1,-4,,1,1,1,1,4,,3,,1,,9,,1,,1,,7,,1,,6,,7,,8,,8,8,7,,6,,4,4,4,4,1,,4,4,6,,8,,8,,4,,7*v,7*v,7*v,7*v,4,,6,,8,8,8,8,13,13,11,11,8,,7,7,6,,6,,4,,6,6,8,,11,,16,16,15,11,6,4,3,3][(t>>12)%264]/12)),

mel1+CHORDS