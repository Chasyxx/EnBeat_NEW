{"version":3,"file":"audio-processor.mjs","sources":["../src/audio-processor.mjs"],"sourcesContent":["class audioProcessor extends AudioWorkletProcessor {\n\tconstructor(...args) {\n\t\tsuper(...args);\n\t\tthis.audioSample = 0;\n\t\tthis.byteSample = 0;\n\t\tthis.drawMode = 'Points';\n\t\tthis.errorDisplayed = true;\n\t\tthis.func = null;\n\t\tthis.getValues = null;\n\t\tthis.isFuncbeat = false;\n\t\tthis.isPlaying = false;\n\t\tthis.playbackSpeed = 1;\n\t\tthis.divisorStorage = 0;\n\t\tthis.lastTime = -1;\n\t\tthis.lastFuncValue = [0, 0];\n\t\tthis.lastByteValue = [0, 0];\n\t\tthis.outValue = [0, 0];\n\t\tthis.sampleRate = 8000;\n\t\tthis.sampleRatio = 1;\n\t\tthis.sampleDivisor/*PRO*/ = 1;\n\t\tthis.soundMode = 'Bytebeat';\n\t\tObject.seal(this);\n\t\taudioProcessor.deleteGlobals();\n\t\taudioProcessor.freezeGlobals();\n\t\tthis.port.addEventListener('message', e => this.receiveData(e.data));\n\t\tthis.port.start();\n\t}\n\tstatic deleteGlobals() {\n\t\t// Delete single letter variables to prevent persistent variable errors (covers a good enough range)\n\t\tfor (let i = 0; i < 26; ++i) {\n\t\t\tdelete globalThis[String.fromCharCode(65 + i)];\n\t\t\tdelete globalThis[String.fromCharCode(97 + i)];\n\t\t}\n\t\t// Delete global variables\n\t\tfor (const name in globalThis) {\n\t\t\tif (Object.prototype.hasOwnProperty.call(globalThis, name)) {\n\t\t\t\tdelete globalThis[name];\n\t\t\t}\n\t\t}\n\t}\n\tstatic freezeGlobals() {\n\t\tObject.getOwnPropertyNames(globalThis).forEach(name => {\n\t\t\tconst prop = globalThis[name];\n\t\t\tconst type = typeof prop;\n\t\t\tif ((type === 'object' || type === 'function') && name !== 'globalThis') {\n\t\t\t\tObject.freeze(prop);\n\t\t\t}\n\t\t\tif (type === 'function' && Object.prototype.hasOwnProperty.call(prop, 'prototype')) {\n\t\t\t\tObject.freeze(prop.prototype);\n\t\t\t}\n\t\t\tObject.defineProperty(globalThis, name, { writable: false, configurable: false });\n\t\t});\n\t}\n\tstatic getErrorMessage(err, time) {\n\t\tconst when = time === null ? 'compilation' : 't=' + time;\n\t\tif (!(err instanceof Error)) {\n\t\t\treturn `${when} thrown: ${typeof err === 'string' ? err : JSON.stringify(err)}`;\n\t\t}\n\t\tconst { message, lineNumber, columnNumber } = err;\n\t\treturn `${when} error${typeof lineNumber === 'number' && typeof columnNumber === 'number' ?\n\t\t\t` (at line ${lineNumber - 3}, character ${+columnNumber})` : ''}: ${typeof message === 'string' ? message : JSON.stringify(message)}`;\n\t}\n\tprocess(inputs, [chData]) {\n\t\tconst chDataLen = chData[0].length;\n\t\tif (!chDataLen || !this.isPlaying) {\n\t\t\treturn true;\n\t\t}\n\t\tlet time = this.sampleRatio * this.audioSample;\n\t\tlet divisor = this.sampleDivisor;\n\t\tlet { byteSample } = this;\n\t\tconst drawBuffer = [];\n\t\tconst isDiagram = this.drawMode === 'Combined' || this.drawMode === 'Diagram';\n\t\tfor(let i = 0; i < chDataLen; ++i) {\n\t\t\ttime += this.sampleRatio;\n\t\t\tconst currentTime = Math.floor(time);\n\t\t\tif (this.lastTime !== currentTime) {\n\t\t\t\tlet funcValue;\n\t\t\t\tconst currentSample = Math.floor(byteSample);\n\t\t\t\tconst DivisorMet = (((currentTime % divisor) + divisor) % divisor) == 0\n\t\t\t\ttry {\n\t\t\t\t\tif(this.isFuncbeat) {\n\t\t\t\t\t\tfuncValue = this.func(currentSample / this.sampleRate, this.sampleRate);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfuncValue = this.func(currentSample);\n\t\t\t\t\t}\n\t\t\t\t} catch(err) {\n\t\t\t\t\tif(this.errorDisplayed) {\n\t\t\t\t\t\tthis.errorDisplayed = false;\n\t\t\t\t\t\tthis.sendData({\n\t\t\t\t\t\t\terror: {\n\t\t\t\t\t\t\t\tmessage: audioProcessor.getErrorMessage(err, currentSample),\n\t\t\t\t\t\t\t\tisRuntime: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfuncValue = NaN;\n\t\t\t\t}\n\t\t\t\tfuncValue = Array.isArray(funcValue) ? [funcValue[0], funcValue[1]] : [funcValue, funcValue]\n\t\t\t\tlet hasValue = false;\n\t\t\t\tlet ch = 2;\n\t\t\t\twhile(ch--) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tfuncValue[ch] = +funcValue[ch];\n\t\t\t\t\t} catch(err) {\n\t\t\t\t\t\tfuncValue[ch] = NaN;\n\t\t\t\t\t}\n\t\t\t\t\tif(isDiagram) {\n\t\t\t\t\t\tif(!isNaN(funcValue[ch])) {\n\t\t\t\t\t\t\tthis.outValue[ch] = this.getValues(funcValue[ch], ch);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.lastByteValue[ch] = NaN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif(funcValue[ch] === this.lastFuncValue[ch]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if(!isNaN(funcValue[ch])) {\n\t\t\t\t\t\tthis.outValue[ch] = this.getValues(funcValue[ch], ch);\n\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t} else if(!isNaN(this.lastFuncValue[ch])) {\n\t\t\t\t\t\tthis.lastByteValue[ch] = NaN;\n\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(hasValue) {\n\t\t\t\t\tdrawBuffer.push({ t: currentSample, value: [...this.lastByteValue] });\n\t\t\t\t}\n\t\t\t\tbyteSample += currentTime - this.lastTime;\n\t\t\t\tthis.lastFuncValue = funcValue;\n\t\t\t\tthis.lastTime = currentTime;\n\t\t\t}\n\t\t\tchData[0][i] = this.outValue[0];\n\t\t\tchData[1][i] = this.outValue[1];\n\t\t}\n\t\tif (Math.abs(byteSample) > Number.MAX_SAFE_INTEGER) {\n\t\t\tthis.resetTime();\n\t\t\treturn true;\n\t\t}\n\t\tthis.audioSample += chDataLen;\n\t\tlet isSend = false;\n\t\tconst data = {};\n\t\tif (byteSample !== this.byteSample) {\n\t\t\tisSend = true;\n\t\t\tdata.byteSample = this.byteSample = byteSample;\n\t\t}\n\t\tif (drawBuffer.length) {\n\t\t\tisSend = true;\n\t\t\tdata.drawBuffer = drawBuffer;\n\t\t}\n\t\tif (isSend) {\n\t\t\tthis.sendData(data);\n\t\t}\n\t\treturn true;\n\t}\n\treceiveData(data) {\n\t\tif (data.byteSample !== undefined) {\n\t\t\tthis.byteSample = +data.byteSample || 0;\n\t\t\tthis.resetValues();\n\t\t}\n\t\tif (data.errorDisplayed === true) {\n\t\t\tthis.errorDisplayed = true;\n\t\t}\n\t\tif (data.isPlaying !== undefined) {\n\t\t\tthis.isPlaying = data.isPlaying;\n\t\t}\n\t\tif (data.playbackSpeed !== undefined) {\n\t\t\tconst sampleRatio = this.sampleRatio / this.playbackSpeed;\n\t\t\tthis.playbackSpeed = data.playbackSpeed;\n\t\t\tthis.setSampleRatio(sampleRatio);\n\t\t}\n\t\tif (data.mode !== undefined) {\n\t\t\tthis.isFuncbeat = data.mode === 'Funcbeat';\n\t\t\tswitch (data.mode) {\n\t\t\t\tcase 'Bytebeat':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => (this.lastByteValue[ch] = funcValue & 255) / 127.5 - 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Signed Bytebeat':\n\t\t\t\t\tthis.getValues = (funcValue, ch) =>\n\t\t\t\t\t\t(this.lastByteValue[ch] = (funcValue + 128) & 255) / 127.5 - 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Floatbeat':\n\t\t\t\tcase 'Funcbeat':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => {\n\t\t\t\t\t\tconst limited = Math.max(Math.min(funcValue, 1), -1);\n\t\t\t\t\t\tthis.lastByteValue[ch] = limited * 127.5 + 127.5 | 0\n\t\t\t\t\t\treturn limited;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Bitbeat':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => {\n\t\t\t\t\t\tthis.lastByteValue[ch] = funcValue & 1 ? 255 : 0;\n\t\t\t\t\t\treturn (funcValue & 1) - 0.5;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase '2048':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => {\n\t\t\t\t\t\tthis.lastByteValue[ch] = funcValue / 8 & 255;\n\t\t\t\t\t\treturn (funcValue & 2047) / 1023.5 - 1\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'logmode':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => (this.lastByteValue[ch] = (Math.log2(funcValue) * 32) & 255) / 127.5 - 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'logHack':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => {\n\t\t\t\t\t\tconst neg = (funcValue < 0) ? -32 : 32;\n\t\t\t\t\t\treturn (this.lastByteValue[ch] = (Math.log2(Math.abs(funcValue)) * neg) & 255) / 127.5 - 1;\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'logHack2':\n\t\t\t\t\tthis.getValues = (funcValue, ch) => {\n\t\t\t\t\t\tconst neg = funcValue < 0\n\t\t\t\t\t\treturn funcValue == 0 ? 0 : ((this.lastByteValue[ch] = ((Math.log2(Math.abs(funcValue)) * (neg ? -16 : 16)) + (neg ? -127 : 128)) & 255) / 127.5 - 1);\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: this.getValues = (_funcValue) => NaN;\n\t\t\t}\n\t\t}\n\t\tif (data.setFunction !== undefined) {\n\t\t\tthis.setFunction(data.setFunction);\n\t\t}\n\t\tif (data.resetTime === true) {\n\t\t\tthis.resetTime();\n\t\t}\n\t\tif(data.sampleRate !== undefined) {\n\t\t\tthis.sampleRate = data.sampleRate;\n\t\t}\n\t\tif(data.sampleRatio !== undefined) {\n\t\t\tthis.setSampleRatio(data.sampleRatio);\n\t\t}\n\t\tif (data.divisor !== undefined) {\n\t\t\tthis.sampleDivisor/*PRO*/ = data.divisor;\n\t\t}\n\t\tif (data.DMode !== undefined) {\n\t\t\tthis.soundMode = data.DMode;\n\t\t}\n\t\tif (data.drawMode !== undefined) {\n\t\t\tthis.drawMode = data.drawMode;\n\t\t}\n\t}\n\tsendData(data) {\n\t\tthis.port.postMessage(data);\n\t}\n\tresetTime() {\n\t\tthis.byteSample = 0;\n\t\tthis.resetValues();\n\t\tthis.sendData({ byteSample: 0 });\n\t}\n\tresetValues() {\n\t\tthis.audioSample = 0;\n\t\tthis.lastTime = -1;\n\t\tthis.outValue = [0, 0];\n\t}\n\tsetFunction(codeText) {\n\t\tconst chyx = {\n\t\t\t/*bit*/        \"bitC\": function (x, y, z) { return x & y ? z : 0 },\n\t\t\t/*bit reverse*/\"br\": function (x, size = 8) {\n\t\t\t\tif (size > 32) { throw new Error(\"br() Size cannot be greater than 32\") } else {\n\t\t\t\t\tlet result = 0;\n\t\t\t\t\tfor (let idx = 0; idx < (size - 0); idx++) {\n\t\t\t\t\t\tresult += chyx.bitC(x, 2 ** idx, 2 ** (size - (idx + 1)))\n\t\t\t\t\t}\n\t\t\t\t\treturn result\n\t\t\t\t}\n\t\t\t},\n\t\t\t/*sin that loops every 128 \"steps\", instead of every pi steps*/\"sinf\": function (x) { return Math.sin(x / (128 / Math.PI)) },\n\t\t\t/*cos that loops every 128 \"steps\", instead of every pi steps*/\"cosf\": function (x) { return Math.cos(x / (128 / Math.PI)) },\n\t\t\t/*tan that loops every 128 \"steps\", instead of every pi steps*/\"tanf\": function (x) { return Math.tan(x / (128 / Math.PI)) },\n\t\t\t/*converts t into a string composed of it's bits, regex's that*/\"regG\": function (t, X) { return X.test(t.toString(2)) }\n\t\t\t/*corrupt sound\"crpt\": function(x,y=8) {return chyx.br(chyx.br(x,y)+t,y)^chyx.br(t,y)},\n\t\t\tdecorrupt sound\"decrpt\": function(x,y=8) {return chyx.br(chyx.br(x^chyx.br(t,y),y)-t,y)},*/\n\t\t}\n\t\t// Create shortened Math functions\n\t\tconst params = Object.getOwnPropertyNames(Math);\n\t\tconst values = params.map(k => Math[k]);\n\t\tconst chyxNames = Object.getOwnPropertyNames(chyx);\n\t\tconst chyxFuncs = chyxNames.map(k => chyx[k]);\n\t\tparams.push('int', 'window', ...chyxNames);\n\t\tvalues.push(Math.floor, globalThis, ...chyxFuncs);\n\t\taudioProcessor.deleteGlobals();\n\t\t// Code testing\n\t\tlet isCompiled = false;\n\t\tconst oldFunc = this.func;\n\t\ttry {\n\t\t\tif(this.isFuncbeat) {\n\t\t\t\tthis.func = new Function(...params, codeText).bind(globalThis, ...values);\n\t\t\t} else {\n\t\t\t\t// Optimize code like eval(unescape(escape`XXXX`.replace(/u(..)/g,\"$1%\")))\n\t\t\t\tcodeText = codeText.trim().replace(\n\t\t\t\t\t/^eval\\(unescape\\(escape(?:`|\\('|\\(\"|\\(`)(.*?)(?:`|'\\)|\"\\)|`\\)).replace\\(\\/u\\(\\.\\.\\)\\/g,[\"'`]\\$1%[\"'`]\\)\\)\\)$/,\n\t\t\t\t\t(match, m1) => unescape(escape(m1).replace(/u(..)/g, '$1%')));\n\t\t\t\tthis.func = new Function(...params, 't', `return 0,\\n${ codeText || 0 };`)\n\t\t\t\t\t.bind(globalThis, ...values);\n\t\t\t}\n\t\t\tisCompiled = true;\n\t\t\tif(this.isFuncbeat) {\n\t\t\t\tthis.func = this.func();\n\t\t\t\tthis.func(0, this.sampleRate);\n\t\t\t} else {\n\t\t\t\tthis.func(0);\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tif(!isCompiled) {\n\t\t\t\tthis.func = oldFunc;\n\t\t\t}\n\t\t\tthis.errorDisplayed = false;\n\t\t\tthis.sendData({\n\t\t\t\terror: { message: audioProcessor.getErrorMessage(err, isCompiled ? 0 : null), isCompiled },\n\t\t\t\tupdateUrl: isCompiled\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tthis.errorDisplayed = false;\n\t\tthis.sendData({ error: { message: '', isCompiled }, updateUrl: true });\n\t}\n\tsetSampleRatio(sampleRatio) {\n\t\tconst timeOffset = Math.floor(this.sampleRatio * this.audioSample) - this.lastTime;\n\t\tthis.sampleRatio = sampleRatio * this.playbackSpeed;\n\t\tthis.lastTime = Math.floor(this.sampleRatio * this.audioSample) - timeOffset;\n\t}\n}\n\nregisterProcessor('audioProcessor', audioProcessor);\n"],"names":["audioProcessor","AudioWorkletProcessor","constructor","args","super","this","audioSample","byteSample","drawMode","errorDisplayed","func","getValues","isFuncbeat","isPlaying","playbackSpeed","divisorStorage","lastTime","lastFuncValue","lastByteValue","outValue","sampleRate","sampleRatio","sampleDivisor","soundMode","Object","seal","deleteGlobals","freezeGlobals","port","addEventListener","e","receiveData","data","start","i","globalThis","String","fromCharCode","name","prototype","hasOwnProperty","call","getOwnPropertyNames","forEach","prop","type","freeze","defineProperty","writable","configurable","getErrorMessage","err","time","when","Error","JSON","stringify","message","lineNumber","columnNumber","process","inputs","chData","chDataLen","length","drawBuffer","isDiagram","currentTime","Math","floor","funcValue","currentSample","sendData","error","isRuntime","NaN","Array","isArray","hasValue","ch","isNaN","push","t","value","abs","Number","MAX_SAFE_INTEGER","resetTime","isSend","undefined","resetValues","setSampleRatio","mode","limited","max","min","log2","neg","_funcValue","setFunction","divisor","DMode","postMessage","codeText","chyx","bitC","x","y","z","br","size","result","idx","sinf","sin","PI","cosf","cos","tanf","tan","regG","X","test","toString","params","values","map","k","chyxNames","chyxFuncs","isCompiled","oldFunc","Function","bind","trim","replace","match","m1","unescape","escape","updateUrl","timeOffset","registerProcessor"],"mappings":"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"}